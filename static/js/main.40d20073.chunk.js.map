{"version":3,"sources":["components/PageTitle.js","components/Postitem.js","components/Developedby.js","components/years.const.js","components/Filter.js","App.js","reportWebVitals.js","index.js"],"names":["PageTitle","className","Postitem","props","satalite","src","links","mission_patch","alt","mission_name","title","mission_id","launch_year","launch_success","rocket","first_stage","cores","land_success","Developedby","years","Filter","useState","data","setData","selectedYear","setSelectedYearYear","launchStatus","setLaunchStatus","landingStatus","setLandingStatus","getFilterData","year","a","launch","landing","url","fetch","resData","json","actualData","console","log","useEffect","map","index","value","onClick","length","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.40d20073.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst PageTitle =()=>{\r\n    return(\r\n        <>\r\n        <div className=\"PageTitle\">\r\n            <h1>SpaceX Launch Programs</h1>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\nexport default PageTitle;","import React, { useEffect ,useState } from 'react';\r\n\r\nconst Postitem = (props) => {\r\n   const {satalite} = props \r\n    return (\r\n        <>\r\n        \r\n            <template className=\"template-item\">\r\n                <div className=\"template-item-inner\">  \r\n                    <img src={satalite.links.mission_patch} alt={satalite.mission_name} title={satalite.mission_name} />  \r\n                    <h2 className=\"template-title\">{satalite.mission_name}</h2> \r\n                    <h3 className=\"lds\">Mission lds:{satalite.mission_id} </h3>\r\n                    <h3 className=\"Year\">Launch Year:{satalite.launch_year} </h3>\r\n                    <h3 className=\"Launch\">Successful Launch:{satalite.launch_success ? \"true\": \"false\"} </h3> \r\n                    <h3 className=\"Landing\">Successful Landing:{satalite.rocket.first_stage.cores[0].land_success ? \"true\": \"false\"}</h3>\r\n                </div>\r\n               \r\n            </template>\r\n        </> \r\n \r\n \r\n\r\n    )\r\n}\r\nexport default Postitem;","import React from 'react';\r\n\r\nconst Developedby = () =>{\r\n   return( \r\n   <>\r\n   <h5>Developed by:Anuj kaushik</h5>\r\n   </>\r\n   )\r\n}\r\nexport default Developedby;","export const years = [\r\n    2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020\r\n];","import React, { useEffect, useState } from 'react';\r\nimport PageTitle from '../components/PageTitle';\r\nimport Postitem from '../components/Postitem';\r\nimport Developedby from '../components/Developedby';\r\n\r\nimport './layout.css';\r\nimport './Filter.css';\r\nimport { years } from './years.const';\r\n\r\nconst Filter = () => { \r\n\r\n    const [data, setData] = useState([]);\r\n    const [selectedYear, setSelectedYearYear] = useState([]);\r\n    const [launchStatus, setLaunchStatus] = useState();\r\n    const [landingStatus, setLandingStatus] = useState();\r\n\r\n    const getFilterData = async (year,launch=true, landing=true ) => {\r\n        let url = `https://api.spaceXdata.com/v3/launches?limit=100&launch_success=${launch}&land_success=${landing}`;\r\n        if(year) {\r\n            url += `&launch_year=${year}`\r\n        }\r\n        try {\r\n            const resData = await fetch(url);\r\n            const actualData = await resData.json();\r\n            console.log(actualData)\r\n            setData(actualData); \r\n        } catch (error) {\r\n            console.log(\"error is \", error);\r\n        }\r\n    }\r\n    \r\n\r\n    useEffect(() => {\r\n        getFilterData();\r\n    },[]);\r\n\r\n \r\n\r\n    return (\r\n        <>\r\n            <div className=\"outer-conatainer\">\r\n                <PageTitle />\r\n                <div className=\"hs-container\">\r\n                    <div className=\"left-col\">\r\n                        <section className=\"hs-headings\">\r\n                            <h2 className=\"sidebar-title\">Filters</h2>\r\n                            <h3 className=\"sidebar-heading\">Launch Year</h3>\r\n                        </section>\r\n                        <section className=\"left-sidebar successful-year\">\r\n                            {years.map((year, index) => {\r\n                                return <button key={ index } className={`btn-sidebar ${year === selectedYear ? 'active' : ''}`} value=\"year\" onClick={() => {\r\n                                    setSelectedYearYear(year);\r\n                                    getFilterData(year, launchStatus, landingStatus);\r\n                                }}>{year}</button>\r\n                            })}\r\n                            \r\n                        </section>\r\n\r\n\r\n                        <section className=\"hs-headings\">\r\n                            <h3 className=\"sidebar-heading\">Successful Launch</h3>\r\n                        </section>\r\n                        <section className=\"left-sidebar successful-launch\">\r\n                            <button className={`btn-sidebar ${launchStatus == true? 'active' : ''}`} value=\"True\" onClick={() => {\r\n                                setLaunchStatus(true)\r\n                                getFilterData(selectedYear, true, landingStatus);\r\n                            }}>True</button>\r\n                            <button className={`btn-sidebar ${launchStatus == false? 'active' : ''}`} value=\"False\" onClick={() => {\r\n                                setLaunchStatus(false)\r\n                                getFilterData(selectedYear, false, landingStatus);\r\n                            }}>False</button>\r\n                        </section>\r\n\r\n\r\n\r\n                        <section className=\"hs-headings\">\r\n                            <h3 className=\"sidebar-heading\">Successful Landing</h3>\r\n                        </section>\r\n                        <section className=\"left-sidebar successful-landing\">\r\n                        <button className={`btn-sidebar ${landingStatus == true ? 'active' : ''}`} value=\"True\" onClick={() => {\r\n                                setLandingStatus(true)\r\n                                getFilterData(selectedYear, launchStatus, true);\r\n                            }}>True</button>\r\n                            <button className={`btn-sidebar ${landingStatus == false ? 'active' : ''}`} value=\"False\" onClick={() => {\r\n                                setLandingStatus(false)\r\n                                getFilterData(selectedYear, launchStatus, false);\r\n                            }}>False</button>\r\n                        </section> \r\n                    </div>\r\n                    <div className=\"right-col\">\r\n                        <section className=\"right-container\"> \r\n                            {data.length ? data.map((satalite, index) => {\r\n                                return <Postitem key={index} satalite={satalite} />\r\n                            }) : 'No results to show!'}\r\n\r\n                        </section>\r\n                    </div>\r\n                </div>\r\n                <Developedby />\r\n                \r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default Filter;","\nimport Filter from './components/Filter';\n\nfunction App() {\n  return (\n     <Filter/>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}